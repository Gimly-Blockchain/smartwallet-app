# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:android)

platform :android do
  desc "Runs all the tests"
  lane :test do
    gradle(task: "test")
  end

  before_all do |lane, options|
    ensure_git_status_clean
  end

  after_all do |lane, options|
    sh("rm secrets.json")
    sh("rm key.json")
  end

  lane :get_secrets do
    begin
      sh("git clone git@infra.jolocom.io:android-secrets")
    rescue
      puts "secrets already present"
    end
    password = prompt(
      text: "password: ",
      secure_text: true
    )
    sh(
      "openssl enc -aes-256-cbc -d -in ./android-secrets/secrets.enc -out secrets.json -k #{password}",
      log: false
    )
    sh(
      "openssl enc -aes-256-cbc -d -in ./android-secrets/key.enc -out key.json -k #{password}",
      log: false
    )
    load_json(json_path: "./android-secrets/secrets.json")
  end

  lane :build do |options|
    releaseFilePath = File.join(Dir.pwd, "..", "android-secrets", "JoloSmartWallet.keystore")
    build_android_app(task: 'clean')
    if options[:local]
      build_android_app(
        task: 'assemble',
        build_type: 'Release',
        print_command: false,
      )
    else
      secrets = get_secrets
      build_android_app(
        task: 'assemble',
        build_type: 'Release',
        print_command: false,
        properties: {
          "android.injected.signing.store.file" => releaseFilePath,
          "android.injected.signing.store.password" => secrets["keystorePassword"],
          "android.injected.signing.key.alias" => "JoloSmartWallet",
          "android.injected.signing.key.password" => secrets["keystorePassword"],
        }
      )
    end
  end

  lane :upload do |options|
    sentry_upload_dsym(
      auth_token: secrets["sentryAuth"],
      org_slug: 'jolocom',
      project_slug: 'smartwallet',
    )
    case options[:target]
    when 'release'
      upload_to_play_store
    when 'beta'
      upload_to_play_store(track: 'beta')
    end
  end

  desc "Install a build on an Android device"
  lane :staging do
    build(local: true)
    adb(
      command: 'install'
    )
  end

  desc "Submit a new Beta Build to Play Store"
  lane :beta do
    ensure_git_branch(branch: 'master')
    ensure_git_status_clean
    build
    upload(target: 'beta')
  end

  desc "Submit a new Release build to Play Store"
  lane :release do
    ensure_git_branch(branch: 'master')
    ensure_git_status_clean
    build
    upload(target: 'release')
  end
end
