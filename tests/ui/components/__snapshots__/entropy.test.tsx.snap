// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Entropy component matches the snapshot when drawn upon and insufficient entropy 1`] = `
<Container
  style={
    Object {
      "backgroundColor": "rgb(5, 5, 13)",
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "rgb(255, 239, 223)",
          "fontFamily": "TT Commons",
          "fontSize": 20,
          "paddingHorizontal": "5%",
          "position": "absolute",
          "textAlign": "center",
          "top": "20%",
        },
        Object {
          "fontSize": 42,
        },
      ]
    }
  >
    50 %
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "column",
        "height": "100%",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <MaskedImageComponent
      addPoint={[Function]}
      disabled={false}
    />
  </View>
</Container>
`;

exports[`Entropy component matches the snapshot when not drawn upon and insufficient entropy 1`] = `
<Container
  style={
    Object {
      "backgroundColor": "rgb(5, 5, 13)",
    }
  }
>
  <Text
    style={
      Object {
        "color": "rgb(255, 239, 223)",
        "fontFamily": "TT Commons",
        "fontSize": 20,
        "paddingHorizontal": "5%",
        "position": "absolute",
        "textAlign": "center",
        "top": "20%",
      }
    }
  >
    For security purposes, we need some randomness. Please tap the screen and draw on it randomly
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "column",
        "height": "100%",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <View
      style={
        Object {
          "position": "absolute",
        }
      }
    >
      <HandAnimationComponent />
    </View>
    <MaskedImageComponent
      addPoint={[Function]}
      disabled={false}
    />
  </View>
</Container>
`;

exports[`Entropy component matches the snapshot with when drawn upon and sufficient entropy 1`] = `
<Container
  style={
    Object {
      "backgroundColor": "rgb(5, 5, 13)",
    }
  }
>
  <Text
    style={
      Array [
        Object {
          "color": "rgb(255, 239, 223)",
          "fontFamily": "TT Commons",
          "fontSize": 20,
          "paddingHorizontal": "5%",
          "position": "absolute",
          "textAlign": "center",
          "top": "20%",
        },
        Object {
          "fontSize": 42,
        },
      ]
    }
  >
    100 %
  </Text>
  <View
    style={
      Object {
        "alignItems": "center",
        "flex": 1,
        "flexDirection": "column",
        "height": "100%",
        "justifyContent": "center",
        "width": "100%",
      }
    }
  >
    <MaskedImageComponent
      addPoint={[Function]}
      disabled={true}
    />
  </View>
</Container>
`;
