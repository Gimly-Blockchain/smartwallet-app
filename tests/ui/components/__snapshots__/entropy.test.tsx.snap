// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Entropy component matches the snapshot when drawn upon and insufficient entropy 1`] = `
<Wrapper
  centered={true}
  dark={true}
>
  <Text
    style={
      Array [
        Object {
          "color": "rgb(255, 239, 223)",
          "fontFamily": "TT Commons",
          "fontSize": 20,
          "paddingHorizontal": "5%",
          "position": "absolute",
          "textAlign": "center",
          "top": "20%",
        },
        Object {
          "fontSize": 42,
        },
      ]
    }
    testID="entropyMsg"
  >
    50 %
  </Text>
  <Wrapper
    breathy={true}
    overlay={true}
  >
    <MaskedImageComponent
      addPoint={[Function]}
      disabled={false}
    />
  </Wrapper>
</Wrapper>
`;

exports[`Entropy component matches the snapshot when not drawn upon and insufficient entropy 1`] = `
<Wrapper
  centered={true}
  dark={true}
>
  <Text
    style={
      Object {
        "color": "rgb(255, 239, 223)",
        "fontFamily": "TT Commons",
        "fontSize": 20,
        "paddingHorizontal": "5%",
        "position": "absolute",
        "textAlign": "center",
        "top": "20%",
      }
    }
    testID="entropyMsg"
  >
    For security purposes, we need some randomness. Please tap the screen and draw on it randomly
  </Text>
  <HandAnimationComponent />
  <Wrapper
    breathy={true}
    overlay={true}
  >
    <MaskedImageComponent
      addPoint={[Function]}
      disabled={false}
    />
  </Wrapper>
</Wrapper>
`;

exports[`Entropy component matches the snapshot with when drawn upon and sufficient entropy 1`] = `
<Wrapper
  centered={true}
  dark={true}
>
  <Text
    style={
      Array [
        Object {
          "color": "rgb(255, 239, 223)",
          "fontFamily": "TT Commons",
          "fontSize": 20,
          "paddingHorizontal": "5%",
          "position": "absolute",
          "textAlign": "center",
          "top": "20%",
        },
        Object {
          "fontSize": 42,
        },
      ]
    }
    testID="entropyMsg"
  >
    100 %
  </Text>
  <Wrapper
    breathy={true}
    overlay={true}
  >
    <MaskedImageComponent
      addPoint={[Function]}
      disabled={true}
    />
  </Wrapper>
</Wrapper>
`;
